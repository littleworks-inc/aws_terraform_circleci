version: 2.1

environment:
  variables:
    AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
    AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"

jobs:

  tfsec:
    docker:
      - image: aquasec/tfsec-ci:latest
    steps:
      - checkout
      - run: 
          name: tfsec
          command: |
            tfsec . -s

  terraform-init-validation:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Terraform Init and validate
          command: |
            terraform init --backend-config="bucket=devopsdemobucket01" --backend-config="key=state/terraform.tfstate" -backend-config="region=ca-central-1" -backend-config="dynamodb_table=devtoolhub" -backend-config="encrypt=true"
            echo "Terrafom Validation"
            terraform validate

  terraform-plan:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run: 
          name: Terraform Plan
          command: |
            terraform init --backend-config="bucket=devopsdemobucket01" --backend-config="key=state/terraform.tfstate" -backend-config="region=ca-central-1" -backend-config="dynamodb_table=devtoolhub" -backend-config="encrypt=true"
            terraform plan -var-file=dev.tfvars

  terraform-apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Terraform Apply 
          command: |
            terraform init --backend-config="bucket=devopsdemobucket01" --backend-config="key=state/terraform.tfstate" -backend-config="region=ca-central-1" -backend-config="dynamodb_table=devtoolhub" -backend-config="encrypt=true"
            terraform apply -var-file=dev.tfvars

workflows:
  build_approve_deploy:
    jobs:
      - tfsec
      - terraform-init-validation:
          requires:
            - tfsec
      - terraform-plan:
          requires:
            - terraform-init-validation
      - hold:
          type: approval
          requires:
            - terraform-plan
      - terraform-apply:
          requires:
            - hold

