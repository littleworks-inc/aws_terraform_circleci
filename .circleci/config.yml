version: 2.1

environment:
  variables:
    AWS_ACCESS_KEY_ID: "$AWS_ACCESS_KEY_ID"
    AWS_SECRET_ACCESS_KEY: "$AWS_SECRET_ACCESS_KEY"
    # TERRAFORM_WORKSPACE: "dev" # Modify based on your workspace
    # TFSEC_RULESET: "aquasec" # Choose rule set or leave empty for all
    # TFSEC_EXCLUDE_RULES: "" # Optional comma-separated list of rules to exclude
    # APPROVAL_EMAIL: "your_email@example.com" # Update with recipient email
    # MIN_COVERAGE: 80 # Adjust minimum code coverage threshold (optional)

jobs:

  # tfsec:
  #   docker:
  #     - image: aquasec/tfsec-ci:latest
  #       user: root
  #   steps:
  #     - checkout
  #     - name: Run tfsec
  #     - run: 
  #         name: tfsec
  #         command: |
  #           tfsec . -s
  #         # command: |
  #         #   tfsec . \
  #         #     --format junit > tfsec_report.xml \
  #         #     ${?TFSEC_RULESET:+--ruleset $TFSEC_RULESET} \
  #         #     ${?TFSEC_EXCLUDE_RULES:+--exclude=$TFSEC_EXCLUDE_RULES}

  terraform-init:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Terraform Init
          command: terraform init --backend-config="bucket=devopsdemobucket01" --backend-config="key=state/terraform.tfstate" -backend-config="region=ca-central-1" -backend-config="dynamodb_table=devtoolhub" -backend-config="encrypt=true"

  terraform-validation:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - name: Terraform validation
      - run:
          name: terraform validate
          command: terraform validate

  terraform-plan:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    # environment:
    #   override:
    #     AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    #     AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - name: Terraform Plan
      - run: 
          name: Terraform Plan
          command: terraform plan -var-file=.terraform/backend.tfvars

  # Conditional Approval based on Code Coverage
  apply-if-coverage:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    # environment:
    #   override:
    #     AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    #     AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    steps:
      - checkout
      - name: Terraform Apply
      - run:
          name: Terraform Apply 
          command: terraform apply 
      # - run: |
      #     COVERAGE=$(cat coverage_report.xml | grep -A3 "<line coverage" | tail -n1 | cut -d'"' -f2)
      #     if [[ $COVERAGE -ge $MIN_COVERAGE ]]; then
      #       terraform apply -var-file=.terraform/backend.tfvars
      #       echo "Deployment triggered automatically due to meeting code coverage requirement." | mail -s "Auto-deployed Terraform changes" $APPROVAL_EMAIL
      #     fi

workflows:
  build_approve_deploy:
    jobs:
      # - tfsec
      - terraform-init
      - terraform-validation
      # - terraform-validation:
      #     requires:
      #       - terraform-init
      # - terraform-plan:
      #     requires:
      #       - terraform-validation
      # - hold-appy:
      #     type: approval
      #     requires:
      #       - terraform-plan

